package bc.com.calvalus.ui.client;import com.google.gwt.event.dom.client.ClickEvent;import com.google.gwt.event.dom.client.ClickHandler;import com.google.gwt.i18n.client.DateTimeFormat;import com.google.gwt.user.client.ui.Button;import com.google.gwt.user.client.ui.Composite;import com.google.gwt.user.client.ui.DecoratorPanel;import com.google.gwt.user.client.ui.DisclosurePanel;import com.google.gwt.user.client.ui.FlexTable;import com.google.gwt.user.client.ui.Grid;import com.google.gwt.user.client.ui.HasHorizontalAlignment;import com.google.gwt.user.client.ui.HorizontalPanel;import com.google.gwt.user.client.ui.ListBox;import com.google.gwt.user.datepicker.client.DateBox;import com.google.gwt.user.datepicker.client.DatePicker;import java.util.Date;import java.util.List;/** * @author muhammad.bc. */public class SearchPanel extends Composite {    private JobResourcesServiceAsync resourcesServiceAsync;    public SearchPanel(List<String> stringList) {        FlexTable flexTable = new FlexTable();        flexTable.setCellPadding(6);        FlexTable.FlexCellFormatter flexCellFormatter = flexTable.getFlexCellFormatter();        flexTable.setBorderWidth(0);        flexTable.setHTML(0, 0, "Search Bar");        flexCellFormatter.setColSpan(0, 0, 3);        flexCellFormatter.setHorizontalAlignment(                0, 0, HasHorizontalAlignment.ALIGN_CENTER);        DateBox startDate = getDateBox();        DateBox endDate = getDateBox();        flexTable.setHTML(1, 0, "Start Date:");        flexTable.setWidget(2, 0, startDate);        flexTable.setHTML(3, 0, "End Date:");        flexTable.setWidget(4, 0, endDate);        Button today = new Button("Today");        today.addClickHandler(new ClickHandler() {            @Override            public void onClick(ClickEvent clickEvent) {                ReportUI.searchRecordToday();            }        });        HorizontalPanel horizontalPanel = new HorizontalPanel();        ListBox listBox = new ListBox();        listBox.addItem("All");        if (stringList != null) {            for (String s : stringList) {                listBox.addItem(s);            }        }        horizontalPanel.add(listBox);        Grid grid = new Grid(2, 2);        grid.setHTML(0, 0, "User");        grid.setWidget(0, 1, horizontalPanel);        grid.add(today);        DisclosurePanel disclosurePanel = new DisclosurePanel("Search Options");        disclosurePanel.setAnimationEnabled(true);        disclosurePanel.ensureDebugId("searchoption");        disclosurePanel.setContent(grid);        flexTable.setWidget(5, 0, disclosurePanel);        Button searchButton = new Button("Search Record");        flexTable.setWidget(6, 0, searchButton);        searchButton.addClickHandler(new ClickHandler() {            @Override            public void onClick(ClickEvent event) {                ReportUI.searchRecord(startDate.getTextBox().getValue(), endDate.getTextBox().getValue(), listBox.getSelectedItemText());            }        });        DecoratorPanel decoratorPanel = new DecoratorPanel();        decoratorPanel.setStyleName("searchPanel");        decoratorPanel.setWidget(flexTable);        initWidget(decoratorPanel);    }    private DateBox getDateBox() {        DateBox dateBox = new DateBox(new DatePicker(), null, new DateBox.DefaultFormat(DateTimeFormat.getFormat("yyyy-MM-dd")));        dateBox.setValue(new Date());        return dateBox;    }}