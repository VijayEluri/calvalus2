package bc.com.calvalus.ui.client;import com.google.gwt.event.dom.client.ClickEvent;import com.google.gwt.event.dom.client.ClickHandler;import com.google.gwt.i18n.client.DateTimeFormat;import com.google.gwt.user.client.ui.Button;import com.google.gwt.user.client.ui.Composite;import com.google.gwt.user.client.ui.DecoratorPanel;import com.google.gwt.user.client.ui.FlexTable;import com.google.gwt.user.client.ui.HasHorizontalAlignment;import com.google.gwt.user.client.ui.VerticalPanel;import com.google.gwt.user.client.ui.Widget;import com.google.gwt.user.datepicker.client.DateBox;import com.google.gwt.user.datepicker.client.DatePicker;import java.util.Date;/** * @author muhammad.bc. */public class SearchPanel extends Composite {    private JobResourcesServiceAsync resourcesServiceAsync;    private final DateBox startDate;    private final DateBox endDate;    public SearchPanel() {        FlexTable flexTable = new FlexTable();        flexTable.setCellPadding(6);        FlexTable.FlexCellFormatter flexCellFormatter = flexTable.getFlexCellFormatter();        flexTable.setBorderWidth(0);        flexTable.setHTML(0, 0, "Search Bar");        flexCellFormatter.setColSpan(0, 0, 3);        flexCellFormatter.setHorizontalAlignment(                0, 0, HasHorizontalAlignment.ALIGN_CENTER);        startDate = getDateBox();        endDate = getDateBox();        flexTable.setHTML(1, 0, "Start Date:");        flexTable.setWidget(2, 0, startDate);        flexTable.setHTML(3, 0, "End Date:");        flexTable.setWidget(4, 0, endDate);        Widget flexTableWidget = searchButtons();        flexTable.setWidget(5, 0, flexTableWidget);        DecoratorPanel decoratorPanel = new DecoratorPanel();        decoratorPanel.setStyleName("searchPanel");        decoratorPanel.setWidget(flexTable);        initWidget(decoratorPanel);    }    public void updateDatePicker(String start, String end) {        startDate.getTextBox().setText(start);        endDate.getTextBox().setText(end);    }    private Widget searchButtons() {        Button searchButton = new Button("Search Record");        searchButton.addClickHandler(new ClickHandler() {            @Override            public void onClick(ClickEvent event) {                ReportUI.searchRecord(startDate.getTextBox().getValue(), endDate.getTextBox().getValue());            }        });        Button todayBut = new Button("Today");        todayBut.addClickHandler(new ClickHandler() {            @Override            public void onClick(ClickEvent clickEvent) {                ReportUI.searchRecordToday();            }        });        Button yesterdayBut = new Button("Yesterday");        yesterdayBut.addClickHandler(new ClickHandler() {            @Override            public void onClick(ClickEvent clickEvent) {                ReportUI.searchRecordYesterday();            }        });        Button thisWeekBut = new Button("This Week");        thisWeekBut.addClickHandler(new ClickHandler() {            @Override            public void onClick(ClickEvent clickEvent) {                ReportUI.searchRecordThisWeekAgo();            }        });        Button lastWeekBut = new Button("Last Week");        lastWeekBut.addClickHandler(new ClickHandler() {            @Override            public void onClick(ClickEvent clickEvent) {                ReportUI.searchRecordLastWeekAgo();            }        });        Button thisMonthBut = new Button("  This Month  ");        thisMonthBut.addClickHandler(new ClickHandler() {            @Override            public void onClick(ClickEvent clickEvent) {                ReportUI.searchRecordThisMonthAgo();            }        });        Button lastMonthBut = new Button("Last Month");        lastMonthBut.addClickHandler(new ClickHandler() {            @Override            public void onClick(ClickEvent clickEvent) {                ReportUI.searchRecordLastMonthAgo();            }        });        VerticalPanel verticalPanel = new VerticalPanel();        verticalPanel.setHorizontalAlignment(HasHorizontalAlignment.ALIGN_CENTER);        FlexTable flexTable = new FlexTable();        flexTable.setCellPadding(4);        FlexTable.FlexCellFormatter flexCellFormatter = flexTable.getFlexCellFormatter();        flexTable.setBorderWidth(0);//        flexTable.setWidget(0, 0, searchButton);        flexTable.setWidget(1, 0, todayBut);        flexTable.setWidget(1, 1, yesterdayBut);        flexTable.setWidget(2, 0, thisWeekBut);        flexTable.setWidget(2, 1, lastWeekBut);        flexTable.setWidget(3, 0, thisMonthBut);        flexTable.setWidget(3, 1, lastMonthBut);        verticalPanel.add(searchButton);        verticalPanel.add(flexTable);        return verticalPanel;    }    private DateBox getDateBox() {        DateBox dateBox = new DateBox(new DatePicker(), null, new DateBox.DefaultFormat(DateTimeFormat.getFormat("yyyy-MM-dd")));        dateBox.setValue(new Date());        return dateBox;    }}