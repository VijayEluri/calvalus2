<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.bc.calvalus</groupId>
        <artifactId>calvalus</artifactId>
        <version>0.2-SNAPSHOT</version>
    </parent>

    <groupId>com.bc.calvalus</groupId>
    <artifactId>calvalus-portal</artifactId>
    <version>${calvalus.version}</version>
    <packaging>war</packaging>

    <name>Calvalus Portal</name>
    <description>The frontend for Calvalus.</description>

    <properties>
        <gwt.version>2.3.0</gwt.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>1.4</version>
        </dependency>

        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.2.2</version>
        </dependency>

        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-servlet</artifactId>
            <version>${gwt.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-user</artifactId>
            <version>${gwt.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-dev</artifactId>
            <version>${gwt.version}</version>
            <!--
            todo - frequently check whether the following note still applies (nf)
            Actually scope 'test' is correct, but with GWT 2.2.0 'mvn gwt:run' doesn't work
            and produces the following error:
            00:00:00,016 [ERROR] Unexpected error while processing XML
            java.lang.NoClassDefFoundError: com/google/gwt/core/ext/GeneratorExt
            -->
            <!--<scope>test</scope>-->
            <!--<scope>compile</scope>-->
            <scope>provided</scope>
        </dependency>
        <!--

        I needed to build gwt-maps with GWT 2.3 first, see here how to:
        http://code.google.com/p/gwt-google-apis/wiki/GettingStartedSource

        Then I installed gwt-maps:
        mvn install:install-file -Dfile=gwt-maps.jar -Djavadoc=gwt-maps-javadocs.jar -Dsources=gwt-maps-noredist.jar  -DartifactId=gwt-maps -DgroupId=com.google.gwt.google-apis -Dversion=1.1.0 -DgeneratePom=true -Dpackaging=jar -DcreateChecksum=true
        -->
        <dependency>
            <groupId>com.google.gwt.google-apis</groupId>
            <artifactId>gwt-maps</artifactId>
            <version>1.1.0</version>
        </dependency>
        <dependency>
            <groupId>com.bc.calvalus</groupId>
            <artifactId>calvalus-commons</artifactId>
        </dependency>
        <dependency>
            <groupId>com.bc.calvalus</groupId>
            <artifactId>calvalus-inventory</artifactId>
        </dependency>
        <dependency>
            <groupId>com.bc.calvalus</groupId>
            <artifactId>calvalus-production</artifactId>
        </dependency>

        <dependency>
            <groupId>org.gwtopenmaps.openlayers</groupId>
            <artifactId>gwt-openlayers-client</artifactId>
            <version>0.5</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>

        <dependency>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>servlet-api-2.5</artifactId>
            <version>6.1.14</version>
            <scope>provided</scope>
        </dependency>

    </dependencies>

    <build>
        <!-- Generate compiled stuff in the folder used for developing mode -->
        <outputDirectory>target/www/WEB-INF/classes</outputDirectory>

        <plugins>

            <!-- GWT Maven Plugin-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>gwt-maven-plugin</artifactId>
                <version>2.2.0</version>
                <!-- JS is only needed in the package phase, this speeds up testing -->
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
                <!-- Plugin configuration. There are many available options,
           see gwt-maven-plugin documentation at codehaus.org -->
                <configuration>
                    <!-- URL that should be automatically opened in the GWT shell (gwt:run). -->
                    <runTarget>calvalus.jsp</runTarget>
                    <!-- Location of the develop-mode web application structure (gwt:run). -->
                    <hostedWebapp>target/www</hostedWebapp>
                    <compileReport>true</compileReport>
                </configuration>
            </plugin>

            <!-- Add source folders to test classpath in order to run gwt-tests as normal junit-tests -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <additionalClasspathElements>
                        <additionalClasspathElement>${project.build.sourceDirectory}</additionalClasspathElement>
                        <additionalClasspathElement>${project.build.testSourceDirectory}</additionalClasspathElement>
                    </additionalClasspathElements>
                    <skipTests>true</skipTests>
                    <useManifestOnlyJar>false</useManifestOnlyJar>
                    <forkMode>always</forkMode>

                    <!-- Folder for generated testing stuff -->
                    <systemProperties>
                        <property>
                            <name>gwt.args</name>
                            <value>-out target/www</value>
                        </property>
                    </systemProperties>
                </configuration>
            </plugin>

            <!-- Copy static web files before executing gwt:run -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/www</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/webapp</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Delete gwt generated stuff -->
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>src/main/webapp/calvalus</directory>
                        </fileset>
                        <fileset>
                            <directory>src/main/webapp/WEB-INF/classes</directory>
                        </fileset>
                        <fileset>
                            <directory>tomcat</directory>
                        </fileset>
                        <fileset>
                            <directory>www-test</directory>
                        </fileset>
                        <fileset>
                            <directory>.gwt-tmp</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <!-- This plugin is used by the TeamCity build server to deploy to the bcvm03 tomcat -->
            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
                <version>1.0.6</version>
                <configuration>
                    <wait>true</wait>
                    <container>
                        <containerId>tomcat7x</containerId>
                        <type>remote</type>
                    </container>
                    <configuration>
                        <type>runtime</type>
                        <properties>
                            <cargo.tomcat.manager.url>http://bcvm03:8080/manager/text</cargo.tomcat.manager.url>
                            <cargo.remote.username>buildserver</cargo.remote.username>
                            <cargo.remote.password>gHGugShf$3dFe4s#6u!igs</cargo.remote.password>
                        </properties>
                    </configuration>
                    <deployer>
                        <type>remote</type>
                        <deployables>
                            <deployable>
                                <groupId>com.bc.calvalus</groupId>
                                <artifactId>calvalus-portal</artifactId>
                                <type>war</type>
                                <!-- Use the following config to change the name of the deployed app. -->
                                <!--<properties>-->
                                    <!--<context>calvalus</context>-->
                                <!--</properties>-->
                            </deployable>
                        </deployables>
                    </deployer>
                </configuration>
                <executions>
                    <!--<execution>-->
                        <!--<id>start-container</id>-->
                        <!--<phase>pre-integration-test</phase>-->
                        <!--<goals>-->
                            <!--<goal>deployer-deploy</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>stop-container</id>-->
                        <!--<phase>post-integration-test</phase>-->
                        <!--<goals>-->
                            <!--<goal>deployer-undeploy</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                    <execution>
                        <id>deploy-to-tomcat</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>redeploy</goal>
                        </goals>
                    </execution>
                    <!--<execution>-->
                        <!--<id>clean-undeploy</id>-->
                        <!--<phase>pre-clean</phase>-->
                        <!--<goals>-->
                            <!--<goal>deployer-undeploy</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                </executions>
            </plugin>

        </plugins>
    </build>
</project>